# Base configuration template that can be reused for any AGV
# Uses placeholders that get replaced by RewrittenYaml

amcl:
  ros__parameters:
    # Reduced motion noise for better precision
    alpha1: 0.05  # Rotation noise from rotation
    alpha2: 0.05  # Rotation noise from translation  
    alpha3: 0.05  # Translation noise from translation
    alpha4: 0.05  # Translation noise from rotation
    alpha5: 0.02  # Translation noise
    
    base_frame_id: "<robot_namespace>/base_link"
    
    # Enable beam skipping for robustness against dynamic obstacles
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.5  # Lower for more aggressive skipping
    beam_skip_threshold: 0.3
    do_beamskip: true  # Enable for better handling of unexpected obstacles
    
    global_frame_id: "map"
    lambda_short: 0.1
    
    # Improved laser model parameters
    laser_likelihood_max_dist: 4.0  # Increased for better long-range matching
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    
    # Increased beams for better precision
    max_beams: 120  # Double the beams for higher accuracy
    
    # Optimized particle count for speed vs accuracy balance
    max_particles: 2000  # Reduced for better performance
    min_particles: 500   # Increased minimum for stability
    
    odom_frame_id: "<robot_namespace>/odom"
    
    # Tighter particle filter parameters for precision
    pf_err: 0.01  # Reduced for higher precision requirement
    pf_z: 0.99
    
    # Enable adaptive resampling for faster convergence
    recovery_alpha_fast: 0.1   # Enable fast recovery
    recovery_alpha_slow: 0.001 # Enable slow recovery
    
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 2.0  # Increased for more frequent pose updates
    
    # Improved sensor model parameters
    sigma_hit: 0.1  # Reduced for more precise laser matching
    
    tf_broadcast: true
    transform_tolerance: 2.0  # Increased to 2 seconds for timing tolerance
    
    # Fix timestamp synchronization issues
    message_timeout_margin: 1.0  # Increase message timeout margin
    tf_buffer_duration: 30.0  # Increase TF buffer to 30 seconds
    
    # More frequent updates for faster response
    update_min_a: 0.1   # Reduced for more frequent angular updates
    update_min_d: 0.1   # Reduced for more frequent translational updates
    
    # Optimized sensor model weights for precision
    z_hit: 0.8    # Increased weight on good hits
    z_max: 0.02   # Reduced weight on max range readings
    z_rand: 0.1   # Reduced random noise weight
    z_short: 0.08 # Slightly increased for obstacle handling
    
    scan_topic: scan
    
    # Set selective resampling threshold
    selective_resampling: true
    
    # Force update on first message
    first_map_only: false
    
    # Improved KLD sampling parameters
    kld_err: 0.01
    kld_z: 0.99

    set_initial_pose: false
    
    # Set max particle weight for numerical stability
    max_weight_ratio: 1000.0

bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: <robot_namespace>/base_link
    odom_topic: odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

controller_server:
  ros__parameters:
    controller_frequency: 30.0
    costmap_update_timeout: 0.30
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    use_realtime_priority: false

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.05
      yaw_goal_tolerance: 0.01

    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      angular_dist_threshold: 0.785
      forward_sampling_distance: 0.5
      angular_disengage_threshold: 0.3925
      rotate_to_heading_angular_vel: 1.8
      max_angular_accel: 3.2
      simulate_ahead_time: 1.0
      rotate_to_goal_heading: true
      desired_linear_vel: 1.0
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_robot_pose_search_dist: 10.0
      stateful: true

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: <robot_namespace>/odom
      robot_base_frame: <robot_namespace>/base_link
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      robot_radius: 0.26
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.70
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: <robot_namespace>/base_link
      robot_radius: 0.26
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.7
      always_send_full_costmap: True

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    planner_plugins: ["GridBased"]
    costmap_update_timeout: 1.0
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
    local_frame: <robot_namespace>/odom
    global_frame: map
    robot_base_frame: <robot_namespace>/base_link
    transform_tolerance: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [4.0, 0.0, 2.0]
    min_velocity: [-4.0, 0.0, -2.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

collision_monitor:
  ros__parameters:
    base_frame_id: <robot_namespace>/base_link
    odom_frame_id: <robot_namespace>/odom
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    state_topic: "collision_monitor_state"
    transform_tolerance: 0.2
    source_timeout: 1.0
    base_shift_correction: True
    stop_pub_timeout: 2.0
    polygons: ["FootprintApproach"]
    FootprintApproach:
      type: "polygon"
      action_type: "approach"
      footprint_topic: "/local_costmap/published_footprint"
      time_before_collision: 1.2
      simulation_time_step: 0.1
      min_points: 6
      visualize: False
      enabled: True
    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "scan"
      min_height: 0.15
      max_height: 2.0
      enabled: True

docking_server:
  ros__parameters:
    controller_frequency: 50.0
    initial_perception_timeout: 5.0
    wait_charge_timeout: 5.0
    dock_approach_timeout: 30.0
    undock_linear_tolerance: 0.1
    undock_angular_tolerance: 0.01
    max_retries: 5
    base_frame: <robot_namespace>/base_link
    fixed_frame: "map"
    dock_backwards: false
    dock_prestaging_tolerance: 0.1

    # Types of docks
    dock_plugins: ['pharmacist_docks', 'psr_docks']
    pharmacist_docks:
      plugin: 'opennav_docking::SimpleNonChargingDock'
      docking_threshold: 0.01
      staging_x_offset: -0.6
      use_external_detection_pose: true
      use_battery_status: false
      use_stall_detection: false
      external_detection_timeout: 30.0
      external_detection_translation_x: -0.37
      external_detection_translation_y: 0.0
      external_detection_rotation_roll: 0.0
      external_detection_rotation_pitch: 1.5708
      external_detection_rotation_yaw: 0.0
      filter_coef: 0.2
    psr_docks:
      plugin: 'opennav_docking::SimpleNonChargingDock'
      docking_threshold: 0.01
      staging_x_offset: -0.6
      use_external_detection_pose: true
      use_battery_status: false
      use_stall_detection: false
      external_detection_timeout: 30.0
      external_detection_translation_x: -0.37
      external_detection_translation_y: 0.0
      external_detection_rotation_roll: 0.0
      external_detection_rotation_pitch: 1.5708
      external_detection_rotation_yaw: 0.0
      filter_coef: 0.2

    # Dock instances  
    docks: ['pharmacist_dock4', 'pharmacist_dock3', 'pharmacist_dock2', 'pharmacist_dock1']
    
    pharmacist_dock4:
      type: 'pharmacist_docks'
      frame: map
      pose: [8.657, -15.025, 1.578]
      
    pharmacist_dock3:
      type: 'pharmacist_docks'
      frame: map
      pose: [8.657, -13.142, 1.578]
      
    pharmacist_dock2:
      type: 'pharmacist_docks'
      frame: map
      pose: [8.657, -11.262, 1.578]
      
    pharmacist_dock1:
      type: 'pharmacist_docks'
      frame: map
      pose: [8.657, -9.382, 1.578] 

    controller:
      k_phi: 3.5
      k_delta: 2.5
      v_linear_min: 0.1
      v_linear_max: 0.1
      use_collision_detection: false
      costmap_topic: "local_costmap/costmap_raw"
      footprint_topic: "local_costmap/published_footprint"
      transform_tolerance: 1.0
      projection_time: 10.0
      simulation_step: 0.05
      dock_collision_threshold: 0.2

loopback_simulator:
  ros__parameters:
    base_frame_id: <robot_namespace>/base_link
    odom_frame_id: <robot_namespace>/odom
    map_frame_id: "map"
    scan_frame_id: <robot_namespace>/base_scan
    update_duration: 0.02
